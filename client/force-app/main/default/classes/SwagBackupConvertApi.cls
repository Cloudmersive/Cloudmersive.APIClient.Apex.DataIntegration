/*
 * Data Integration API
 * Easily and directly query database backup files, convert into other file formats.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagBackupConvertApi {
    SwagClient client;

    public SwagBackupConvertApi(SwagClient client) {
        this.client = client;
    }

    public SwagBackupConvertApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Lists all tables stored in a SQL Server Backup (.BAK) file
     * 
     * @param inputFile Input file to perform the operation on (optional)
     * @return SwagMssqlBakEnumerateTablesResult
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagMssqlBakEnumerateTablesResult dataintegrationBackupConvertMssqlBakGetTablesPost(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (SwagMssqlBakEnumerateTablesResult) client.invoke(
            'POST', '/dataintegration/backup/convert/mssql/bak/get/tables', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            SwagMssqlBakEnumerateTablesResult.class
        );
    }
    /**
     * Converts a SQL Server Backup (.BAK) file into CSV for a specified table
     * Input the target table to extract the data as a CSV format file.  Supports a wide array of SQL Server .BAK files and SQL Server backup file versions.  Consumes 1 API call per MB of input data.
     * @param tableName Name of the table to return (optional)
     * @param inputFile Input file to perform the operation on (optional)
     * @return String
     * @throws Swagger.ApiException if fails to make API call
     */
    public String dataintegrationBackupConvertMssqlBakToCsvPost(Map<String, Object> params) {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (String) client.invoke(
            'POST', '/dataintegration/backup/convert/mssql/bak/to/csv', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'tableName' => (String) params.get('tableName')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            String.class
        );
    }
}
